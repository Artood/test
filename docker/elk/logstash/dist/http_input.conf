# Input section
input {
    http {
    id => "tpot"
    host => "0.0.0.0"
    port => "64305"
    ecs_compatibility => disabled
  }
  #top_10
  file {
    path => ["/data/top_10/log/top_10.log"]
    #codec => json
    codec => plain
    #start_position => "beginning"
    sincedb_path=> "/dev/null"
    type => "top_10"
  }
  #test_top_10
  file {
    path => ["/data/top_10/log/test_top_10.log"]
    #codec => json
    codec => plain
    #start_position => "beginning"
    sincedb_path=> "/dev/null"
    type => "test_top_10"
  }
}

filter {
  if [type] == "top_10" {
    grok {
      match => { "message" => "timestamp:(?<timestamp>.*); top10:(?<top10>.*);" }
    }
  }
  throttle {
    before_count => -1
    after_count => 10
    period => 120
    max_age => 360
    #key => "%{message}"
    key => [Type]
    add_tag => "throttled"
  }
}

# Output section
output {
  if [type] == "top_10" {
    #stdout { codec => rubydebug }
    http {
      url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
      http_method => "post"
      format => message
      content_type =>"application/json"
      message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Top 10 attackers:\n%{top10}"}'
     # message => '{"chat_id":"-4164079885","text":"Top 10 attackers:\n%{top10}"}'
    }
  }

  if [type] == "test_top_10" {
    #stdout { codec => rubydebug }
    http {
      url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
      http_method => "post"
      format => message
      content_type =>"application/json"
      message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Top 10 attackers:\n%{top10}"}'
     # message => '{"chat_id":"-4164079885","text":"Top 10 attackers:\n%{top10}"}'
    }
  }


  if "throttled" not in [tags]{
    if [t-pot_hostname] == "sensor" {
      if [type] == "ADBHoney" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Android debug bridge attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "CitrixHoneypot" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Citrix  attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}"}'
        }
      }

      if [type] == "ConPot" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Indastrial (ICS/SCADA)  attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n"}'
        }
      }
      if [type] == "Cowrie" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"SSH/Telnet terminal attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "Dicompot" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Medical infrastructure (DICOM) attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "Ddospot" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"DDOS attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\"}'
        }
      }
      if [type] == "Dionaea" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"IT infrastructure attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n"}'
        }
      }
      if [type] == "endlessh" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"SSH/Telnet terminal attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "ElasticPot" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Elastic attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "Ipphoney" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Print infrastructure attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "log4pot" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Log4pot vilnerability attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "Mailoney" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Mail (SMTP)  attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "Medpot" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Medical infrastructure (Another) attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "Redishoneypot" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"Redis NoSQL database attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
      if [type] == "Sentrypeer" {
        http {
        url => "https://api.telegram.org/bot${TELEGRAM_BOT_ID}:${TELEGRAM_API_KEY}/sendMessage"
        http_method => "post"
        format => message
        content_type => "application/json"
        message => '{"chat_id":"${TELEGRAM_CHAT_ID}","text":"VoIP (SIP) attack detected.\n%{t-pot_hostname}\nAttacker source IP: %{src_ip}\n%{message}"}'
        }
      }
    }
  }
 elasticsearch {
    hosts => ["elasticsearch:9200"]
    # With templates now being legacy we need to set the daily index with its template manually. Otherw>
    index => "logstash-%{+YYYY.MM.dd}"
    template => "/etc/logstash/tpot-template.json"
    template_overwrite => "true"
  }
}
